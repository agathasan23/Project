// Generated by view binder compiler. Do not edit!
package com.example.prkuliah.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prkuliah.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRecomendEventBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CircleImageView fotoOrganizer;

  @NonNull
  public final TextView kategori;

  @NonNull
  public final TextView nOrganizer;

  @NonNull
  public final TextView tvNamaevent;

  @NonNull
  public final TextView tvPlace;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvSlot;

  @NonNull
  public final TextView tvTglClose;

  private ItemRecomendEventBinding(@NonNull LinearLayout rootView,
      @NonNull CircleImageView fotoOrganizer, @NonNull TextView kategori,
      @NonNull TextView nOrganizer, @NonNull TextView tvNamaevent, @NonNull TextView tvPlace,
      @NonNull TextView tvPrice, @NonNull TextView tvSlot, @NonNull TextView tvTglClose) {
    this.rootView = rootView;
    this.fotoOrganizer = fotoOrganizer;
    this.kategori = kategori;
    this.nOrganizer = nOrganizer;
    this.tvNamaevent = tvNamaevent;
    this.tvPlace = tvPlace;
    this.tvPrice = tvPrice;
    this.tvSlot = tvSlot;
    this.tvTglClose = tvTglClose;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRecomendEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRecomendEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_recomend_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRecomendEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fotoOrganizer;
      CircleImageView fotoOrganizer = ViewBindings.findChildViewById(rootView, id);
      if (fotoOrganizer == null) {
        break missingId;
      }

      id = R.id.kategori;
      TextView kategori = ViewBindings.findChildViewById(rootView, id);
      if (kategori == null) {
        break missingId;
      }

      id = R.id.nOrganizer;
      TextView nOrganizer = ViewBindings.findChildViewById(rootView, id);
      if (nOrganizer == null) {
        break missingId;
      }

      id = R.id.tvNamaevent;
      TextView tvNamaevent = ViewBindings.findChildViewById(rootView, id);
      if (tvNamaevent == null) {
        break missingId;
      }

      id = R.id.tvPlace;
      TextView tvPlace = ViewBindings.findChildViewById(rootView, id);
      if (tvPlace == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvSlot;
      TextView tvSlot = ViewBindings.findChildViewById(rootView, id);
      if (tvSlot == null) {
        break missingId;
      }

      id = R.id.tvTglClose;
      TextView tvTglClose = ViewBindings.findChildViewById(rootView, id);
      if (tvTglClose == null) {
        break missingId;
      }

      return new ItemRecomendEventBinding((LinearLayout) rootView, fotoOrganizer, kategori,
          nOrganizer, tvNamaevent, tvPlace, tvPrice, tvSlot, tvTglClose);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
